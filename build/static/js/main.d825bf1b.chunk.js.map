{"version":3,"sources":["snapshots sync /^/.//.*/.png$","snapshots/仕_red.png","snapshots/兵_red.png","snapshots/卒_black.png","snapshots/士_black.png","snapshots/将_black.png","snapshots/帅_red.png","snapshots/炮_black.png","snapshots/相_red.png","snapshots/砲_red.png","snapshots/象_black.png","snapshots/車_black.png","snapshots/車_red.png","snapshots/馬_black.png","snapshots/馬_red.png","utils/constants.js","utils/Game.js","components/Pointor.jsx","store.js","components/Checkerboard.jsx","components/Chessman.jsx","components/CheckerPonits.jsx","components/DashBoard.jsx","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","BLACK_ROLE","VEHICLE","HORSE","ELEPHANT","GUARD","MARSHAL","GUN","SOLIDER","RED_ROLE","ROLE","InitCheckBoardPoints","role","group","ItemTypes","WINNER","_game","applyTie","result","roundChange","timerInterval","timer","setInterval","gameTimer","timerCbs","forEach","cb","addTimerCb","push","points","round","groupInAction","groupTurn","clearInterval","gameFinishCbs","roundChangeCbs","addRoundChangeCb","judgeFinish","targetRow","targetCol","willToTie","isRed","_ROLE","isFinish","addGameFinishCb","this","roundCache","parsePosition","chess","targetPoint","Number","row","col","fromRow","fromCol","rowChanges","Math","abs","colChanges","isSameGroup","MARSHAL_SAPCE","startRow","endRow","startCol","endCol","isViolateSoliderRule","isPass","isCrossBorder","isViolateVehicleRule","max","_row","min","_col","isViolateHorserRule","isViolateElephantRule","minRow","minCol","isViolateGuardRule","isViolateMarshalRule","isViolateGunRule","_num","Pointor","connect","state","pointors","className","move","useDrop","accept","canDrop","moveChess","length","canChessDrop","drop","collect","monitor","isOver","_","ref","createSlice","name","initialState","reducers","updatePointors","payload","_targetRow","_targetCol","_fromRow","_fromCol","game","resetPointors","Actions","actions","configureStore","reducer","slant","slantBack","anchorRb","anchorRt","anchorLt","anchorLb","Checkerboard","init","_renderGrid","isDivider","baseCls","isLast","extCls","gridCls","includes","_move","useCallback","key","_renderBanner","useEffect","Array","fill","Chessman","props","position","style","split","useDrag","type","item","isDragging","drag","preview","previewImg","useMemo","imgUrl","require","DragPreviewImage","src","opacity","CheckerPonits","_renderPoints","isArray","_rowId","rowId","point","_colId","colId","_renderPoint","node","document","getElementById","createPortal","React","Component","DashBoard","time","moment","utcOffset","format","setState","byTurn","_timeFormat","onClick","_applyTie","body","App","isModalOpen","title","open","footer","store","DndProvider","backend","HTML5Backend","_renderModal","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d825bf1b.chunk.js","sourcesContent":["var map = {\n\t\"./仕_red.png\": 139,\n\t\"./兵_red.png\": 140,\n\t\"./卒_black.png\": 141,\n\t\"./士_black.png\": 142,\n\t\"./将_black.png\": 143,\n\t\"./帅_red.png\": 144,\n\t\"./炮_black.png\": 145,\n\t\"./相_red.png\": 146,\n\t\"./砲_red.png\": 147,\n\t\"./象_black.png\": 148,\n\t\"./車_black.png\": 149,\n\t\"./車_red.png\": 150,\n\t\"./馬_black.png\": 151,\n\t\"./馬_red.png\": 152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 138;","module.exports = __webpack_public_path__ + \"static/media/仕_red.153eb7ea.png\";","module.exports = __webpack_public_path__ + \"static/media/兵_red.fe5a6e46.png\";","module.exports = __webpack_public_path__ + \"static/media/卒_black.a45bd480.png\";","module.exports = __webpack_public_path__ + \"static/media/士_black.1c5324f3.png\";","module.exports = __webpack_public_path__ + \"static/media/将_black.349ed535.png\";","module.exports = __webpack_public_path__ + \"static/media/帅_red.13afce9f.png\";","module.exports = __webpack_public_path__ + \"static/media/炮_black.6ef291b4.png\";","module.exports = __webpack_public_path__ + \"static/media/相_red.ed8d9e85.png\";","module.exports = __webpack_public_path__ + \"static/media/砲_red.1abdb6d5.png\";","module.exports = __webpack_public_path__ + \"static/media/象_black.f959bf29.png\";","module.exports = __webpack_public_path__ + \"static/media/車_black.808be253.png\";","module.exports = __webpack_public_path__ + \"static/media/車_red.9bf2dba6.png\";","module.exports = __webpack_public_path__ + \"static/media/馬_black.668d40a6.png\";","module.exports = __webpack_public_path__ + \"static/media/馬_red.31b9c336.png\";","export const BLACK_ROLE = {\n    VEHICLE: '車',\n    HORSE: '馬',\n    ELEPHANT: '象',\n    GUARD: '士',\n    MARSHAL: '将',\n    GUN: '炮',\n    SOLIDER: '卒',\n};\n\nexport const RED_ROLE = {\n    VEHICLE: '車',\n    HORSE: '馬',\n    ELEPHANT: '相',\n    GUARD: '仕',\n    MARSHAL: '帅',\n    GUN: '砲',\n    SOLIDER: '兵',\n};\n\nexport const ROLE = {\n    BLACK: 'black',\n    RED: 'red',\n};\n\n// 初始化棋盘点\nexport const InitCheckBoardPoints = [\n    // 黑色\n    [\n        {\n            role: BLACK_ROLE.VEHICLE, group: ROLE.BLACK\n        },\n        {\n            role: BLACK_ROLE.HORSE, group: ROLE.BLACK\n        },\n        {\n            role: BLACK_ROLE.ELEPHANT, group: ROLE.BLACK\n        },\n        {\n            role: BLACK_ROLE.GUARD, group: ROLE.BLACK\n        },\n        {\n            role: BLACK_ROLE.MARSHAL, group: ROLE.BLACK\n        },\n        {\n            role: BLACK_ROLE.GUARD, group: ROLE.BLACK\n        },\n        {\n            role: BLACK_ROLE.ELEPHANT, group: ROLE.BLACK\n        },\n        {\n            role: BLACK_ROLE.HORSE, group: ROLE.BLACK\n        },\n        {\n            role: BLACK_ROLE.VEHICLE, group: ROLE.BLACK\n        }\n    ],\n    ['', '', '', '', '', '', '', '', ''],\n    [\n        '',\n        { role: BLACK_ROLE.GUN, group: ROLE.BLACK },\n        '',\n        '',\n        '',\n        '',\n        '',\n        { role: BLACK_ROLE.GUN, group: ROLE.BLACK },\n        ''\n    ],\n    [\n        {\n            role: BLACK_ROLE.SOLIDER, group: ROLE.BLACK\n        },\n        '',\n        {\n            role: BLACK_ROLE.SOLIDER, group: ROLE.BLACK\n        },\n        '',\n        {\n            role: BLACK_ROLE.SOLIDER, group: ROLE.BLACK\n        },\n        '',\n        {\n            role: BLACK_ROLE.SOLIDER, group: ROLE.BLACK\n        },\n        '',\n        {\n            role: BLACK_ROLE.SOLIDER, group: ROLE.BLACK\n        }\n    ],\n    ['', '', '', '', '', '', '', '', ''],\n    // 红色\n    ['', '', '', '', '', '', '', '', ''],\n    [\n        {\n            role: RED_ROLE.SOLIDER, group: ROLE.RED\n        },\n        '',\n        {\n            role: RED_ROLE.SOLIDER, group: ROLE.RED\n        },\n        '',\n        {\n            role: RED_ROLE.SOLIDER, group: ROLE.RED\n        },\n        '',\n        {\n            role: RED_ROLE.SOLIDER, group: ROLE.RED\n        },\n        '',\n        {\n            role: RED_ROLE.SOLIDER, group: ROLE.RED\n        }\n    ],\n    [\n        '',\n        { role: RED_ROLE.GUN, group: ROLE.RED },\n        '',\n        '',\n        '',\n        '',\n        '',\n        { role: RED_ROLE.GUN, group: ROLE.RED },\n        ''\n    ],\n    ['', '', '', '', '', '', '', '', ''],\n    [\n        {\n            role: RED_ROLE.VEHICLE, group: ROLE.RED\n        },\n        {\n            role: RED_ROLE.HORSE, group: ROLE.RED\n        },\n        {\n            role: RED_ROLE.ELEPHANT, group: ROLE.RED\n        },\n        {\n            role: RED_ROLE.GUARD, group: ROLE.RED\n        },\n        {\n            role: RED_ROLE.MARSHAL, group: ROLE.RED\n        },\n        {\n            role: RED_ROLE.GUARD, group: ROLE.RED\n        },\n        {\n            role: RED_ROLE.ELEPHANT, group: ROLE.RED\n        },\n        {\n            role: RED_ROLE.HORSE, group: ROLE.RED\n        },\n        {\n            role: RED_ROLE.VEHICLE, group: ROLE.RED\n        }\n    ],\n];\n\n// dnd type\nexport const ItemTypes = {\n    CARD: 'card',\n};\n\nexport const WINNER = {\n    NOT_FINISH: 0, // 对局未结束\n    RED: 1, // 红方\n    BLACK: 2, // 黑方\n    TIE: 3, // 平局\n};","/**\n * 游戏逻4辑\n*/\nimport { BLACK_ROLE, RED_ROLE, ROLE, WINNER } from './constants.js';\n\n/**\n * 在象棋游戏对局中，有部分数据是最终要显示的，如棋子位置、棋盘等\n * 有些数据不需要显示，它们更像是一种规则，将他们放在store中就不合适\n * 它们和视图无关，但是又横亘游戏全局，比如：当前行动方、第几轮、对局记录等\n*/\nexport class Game {\n    constructor({ role = ROLE.BLACK } = {}) {\n        this.round = 0;\n        this.roundChangeCbs = [];\n        this.groupInAction = role; // 默认黑子先\n        this.roundCache = [];\n        this.timer = null;\n        this.gameTimer = 0;\n        this.timerCbs = []; // 每秒钟的回调函数\n        this.result = WINNER.NOT_FINISH; // 进行中\n        this.groupTurn = {\n            [ROLE.BLACK]: ROLE.RED,\n            [ROLE.RED]: ROLE.BLACK,\n        };\n        this.gameFinishCbs = [];\n    }\n\n    applyTie = () => {\n        if (this.result === WINNER.NOT_FINISH) {\n            this.result = WINNER.TIE;\n            this.roundChange();\n        }\n    };\n\n    timerInterval = () => {\n        this.timer = setInterval(() => {\n            this.gameTimer += 1000;\n            this.timerCbs.forEach((cb) => {\n                if (typeof cb === 'function') { cb(); }\n            });\n        }, 1000);\n    };\n\n    addTimerCb = (cb) => {\n        this.timerCbs.push(cb || (() => {}));\n    };\n\n    /**\n     * @param {object} points 对局所有的棋子\n    */\n    roundChange = (points) => {\n        // (wsw)TODO: 补充棋谱缓存\n        // this.roundCache.push();\n        this.round ++;\n        if (this.round === 1) {\n            this.timerInterval();\n        }\n\n        if (this.result === WINNER.NOT_FINISH) {\n            this.groupInAction = this.groupTurn[this.groupInAction];\n        } else {\n            clearInterval(this.timer);\n            // 平局、结束提示\n            this.gameFinishCbs.forEach((cb) => {\n                if (typeof cb === 'function') { cb(this.result); }\n            });\n        }\n\n        this.roundChangeCbs.forEach((cb) => {\n            if (typeof cb === 'function') { cb(); }\n        });\n    };\n\n    addRoundChangeCb = (cb) => {\n        this.roundChangeCbs.push(cb || (() => {}));\n    };\n\n    /**\n     * @param {object} points 对局所有的棋子\n     * @return {enum} 对局状况\n    */\n    judgeFinish = (points, { targetRow, targetCol, willToTie = false } = {}) => {\n        if (willToTie) {\n            this.result = WINNER.TIE; // 求和\n            return;\n        }\n\n        const isRed = this.groupInAction === ROLE.RED;\n        const _ROLE = isRed ? BLACK_ROLE : RED_ROLE;\n        let isFinish = false;\n\n        // 判断是否有本轮行动方的将棋是否还在\n        if (points[targetRow][targetCol]) {\n            if (points[targetRow][targetCol].role === _ROLE.MARSHAL) {\n                isFinish = true;\n            }\n        }\n\n        if (isFinish) {\n            // 轮到一方行动，该方无将棋，判负\n            this.result = isRed ? WINNER.RED : WINNER.BLACK;\n        } else {\n            this.result = WINNER.NOT_FINISH;\n        }\n    };\n\n    addGameFinishCb = (cb) => {\n        this.gameFinishCbs.push(cb || (() => {}));\n    };\n};\n\nconst _game = new Game();\nexport default _game;\n\n/**8 * 棋子是否可以落子\n 10 @param chess 棋子信息\n * 4@param fromPoint 棋子出发点\n * 6@param targetPoint 棋子落点\n * @param points 整盘棋子布局\n * @returns Boolean 是否可以落子\n*/\nexport const canChessDrop = (chess, targetPoint, points) => {\n    // 不是行动方不可移动\n    if (_game.groupInAction !== chess.group) { return false; }\n    let canDrop = false;\n    if (!(targetPoint && chess && points.length)) { return canDrop; }\n    const {\n        targetRow, targetCol,\n        fromRow, fromCol,\n    } = parsePosition(chess, targetPoint, points);\n    if (targetRow === fromRow && targetCol === fromCol) { return canDrop; }\n\n    const { role } = chess || {};\n\n    switch (role) {\n        case BLACK_ROLE.SOLIDER:\n        case RED_ROLE.SOLIDER:\n            canDrop = isViolateSoliderRule(chess, targetPoint, points);\n            break;\n        case BLACK_ROLE.GUN:\n        case RED_ROLE.GUN:\n            canDrop = isViolateGunRule(chess, targetPoint, points);\n            break;\n        case BLACK_ROLE.VEHICLE:\n        case RED_ROLE.VEHICLE:\n            canDrop = isViolateVehicleRule(chess, targetPoint, points);\n            break;\n        case BLACK_ROLE.HORSE:\n        case RED_ROLE.HORSE:\n            canDrop = isViolateHorserRule(chess, targetPoint, points);\n            break;\n        case BLACK_ROLE.ELEPHANT:\n        case RED_ROLE.ELEPHANT:\n            canDrop = isViolateElephantRule(chess, targetPoint, points);\n            break;\n        case BLACK_ROLE.GUARD:\n        case RED_ROLE.GUARD:\n            canDrop = isViolateGuardRule(chess, targetPoint, points);\n            break;\n        case BLACK_ROLE.MARSHAL:\n        case RED_ROLE.MARSHAL:\n            canDrop = isViolateMarshalRule(chess, targetPoint, points);\n            break;\n        default:\n            break;\n    }\n    return canDrop;\n};\n\n/**\n * 解析棋子位置\n * @param {Object} chess 棋子信息\n * @param {Object} targetPoint 目标位置信息\n * @param {Array(Object)} points 全局棋子信息\n * @returns {Object} 起点xy，终点xy\n*/\nconst parsePosition = (chess, targetPoint, points) => {\n    const targetRow = Number(targetPoint.row - 1);\n    const targetCol = Number(targetPoint.col - 1);\n    const fromRow = Number(chess.fromRow - 1);\n    const fromCol = Number(chess.fromCol - 1);\n    const rowChanges = Math.abs(targetRow - fromRow);\n    const colChanges = Math.abs(targetCol - fromCol);\n    const isSameGroup = (points[targetRow][targetCol].group === chess.group) && chess.group;\n\n    return {\n        targetRow, targetCol,\n        fromRow, fromCol,\n        rowChanges, colChanges,\n        group: chess.group,\n        isSameGroup\n    };\n};\n\n/**\n * 判断棋子是否越界\n * @param chess 棋子信息\n * @param row 所在行\n * @returns Boolean 是否为越界\n*/\nconst isCrossBorder = (chess, row) => {\n    const { group } = chess || {};\n    return group === ROLE.RED ? row <= 5 : row >= 6;\n}\n\n// 将、士移动范围\nconst MARSHAL_SAPCE = {\n    [ROLE.BLACK]: {\n        startRow: 0,\n        endRow: 2,\n        startCol: 3,\n        endCol: 5,\n    },\n    [ROLE.RED]: {\n        startRow: 7,\n        endRow: 9,\n        startCol: 3,\n        endCol: 5,\n    },\n};\n\n/**\n * 下列为是否违反各个角色（如车、炮）移动规则判断 \n * 参数顺序相同，缺少则表示无需此参数\n * @param {Object} chess 被移动的棋子，含起始位置、棋子信息\n * @param {Object} targetPoint 目标位置信息\n * @param {Array} points 所有棋子信息\n * @return {Boolean} 是否可以落子\n*/\n// (wsw)TODO: 添加失败停止，和棋局导出（会多处这么一个按钮）。\n// (wsw)TODO: 其它棋子移动，导致的两将对立的情况呢？\n// 兵、卒\nconst isViolateSoliderRule = (chess, targetPoint, points) => {\n    const {\n        targetRow, targetCol,\n        fromRow, fromCol,\n        rowChanges, colChanges,\n        isSameGroup\n    } = parsePosition(chess, targetPoint, points);\n    const isRed = chess.group === ROLE.RED;\n    const isCross = isCrossBorder(chess, fromRow + 1);\n    let isPass = true;\n\n    if (isCross) {\n        isPass = (\n            (colChanges + rowChanges) === 1\n            && (isRed ? targetRow <= fromRow : targetRow >= fromRow)\n        );\n    } else {\n        if (isRed) {\n            isPass = (\n                targetRow === fromRow - 1 && colChanges === 0\n            );\n        } else {\n            isPass = (\n                targetRow === fromRow + 1 && colChanges === 0\n            );\n        }\n    }\n\n    if (isPass && isSameGroup) {\n        return false;\n    }\n\n    return isPass;\n};\n// 車、车\nconst isViolateVehicleRule = (chess, targetPoint, points) => {\n    const {\n        targetRow, targetCol,\n        fromRow, fromCol,\n        rowChanges, colChanges,\n        isSameGroup\n    } = parsePosition(chess, targetPoint, points);\n    let isPass = true;\n\n    // 是否在同一行 && 是否在同一列\n    if (rowChanges === 0 || colChanges === 0) {\n        // 前进方向是存在阻碍\n        if (colChanges === 0) {\n            const max = Math.max(fromRow, targetRow);\n            const min = Math.min(fromRow, targetRow);\n            for (let _row = min + 1; _row < max; _row ++) {\n                if (points[_row][targetCol]) {\n                    isPass = false;\n                    break;\n                }\n            }\n        } else {\n            const max = Math.max(fromCol, targetCol);\n            const min = Math.min(fromCol, targetCol);\n            for (let _col = min + 1; _col < max; _col ++) {\n                if (points[targetRow][_col]) {\n                    isPass = false;\n                    break;\n                }   \n            }\n        }\n        if (isPass && isSameGroup) {\n            return false;\n        }\n        return isPass;\n    }\n\n    return false;\n};\n// 马、馬\nconst isViolateHorserRule = (chess, targetPoint, points) => {\n    const {\n        targetRow, targetCol,\n        fromRow, fromCol,\n        rowChanges, colChanges,\n        isSameGroup\n    } = parsePosition(chess, targetPoint, points);\n    let isPass = true;\n\n    if ((rowChanges + colChanges) === 3) {\n        // 找到马腿\n        if (rowChanges === 2) {\n            const min = Math.min(fromRow, targetRow);\n            isPass = !points[min + 1][fromCol];\n        } else {\n            const min = Math.min(fromCol, targetCol);\n            isPass = !points[fromRow][min + 1];\n        }\n        if (isPass && isSameGroup) {\n            return false;\n        }\n        return isPass;\n    }\n    return false;\n};\n// 象、相\nconst isViolateElephantRule = (chess, targetPoint, points) => {\n    const {\n        targetRow, targetCol,\n        fromRow, fromCol,\n        rowChanges, colChanges,\n        isSameGroup\n    } = parsePosition(chess, targetPoint, points);\n    let isPass = true;\n\n    if (rowChanges === 2 && colChanges === 2) {\n        const minRow = Math.min(fromRow, targetRow);\n        const minCol = Math.min(fromCol, targetCol);\n\n        isPass = !points[minRow + 1][minCol + 1];\n\n        if (isPass && isSameGroup) {\n            return false;\n        }\n        return isPass;\n    }\n\n    return false;\n};\n// 士、仕\nconst isViolateGuardRule = (chess, targetPoint, points) => {\n    const {\n        targetRow, targetCol,\n        rowChanges, colChanges,\n        isSameGroup, group\n    } = parsePosition(chess, targetPoint, points);\n    let isPass = true;\n\n    // 需要限定移动范围\n    if (rowChanges === 1 && colChanges === 1) {\n        isPass = (\n            (\n                MARSHAL_SAPCE[group].startCol <= targetCol\n                && MARSHAL_SAPCE[group].endCol >= targetCol\n            ) && (\n                MARSHAL_SAPCE[group].startRow <= targetRow\n                && MARSHAL_SAPCE[group].endRow >= targetRow\n            )\n        );\n    } else if (rowChanges === 1) {\n        isPass = (\n            MARSHAL_SAPCE[group].startRow <= targetRow\n            && MARSHAL_SAPCE[group].endRow >= targetRow\n        );\n    } else if (colChanges === 1) {\n        isPass = (\n            MARSHAL_SAPCE[group].startCol <= targetCol\n            && MARSHAL_SAPCE[group].endCol >= targetCol\n        );\n    }\n\n    if (isPass && isSameGroup) {\n        return false;\n    }\n\n    return isPass;\n};\n// 将、帅\nconst isViolateMarshalRule = (chess, targetPoint, points) => {\n    const {\n        targetRow, targetCol,\n        rowChanges, colChanges,\n        isSameGroup, group\n    } = parsePosition(chess, targetPoint, points);\n    let isPass = true;\n\n    // 需要限定移动范围\n    if ((rowChanges + colChanges) === 1) {\n        if (\n            (\n                MARSHAL_SAPCE[group].startRow <= targetRow\n                && MARSHAL_SAPCE[group].endRow >= targetRow\n            ) && (\n                MARSHAL_SAPCE[group].startCol <= targetCol\n                && MARSHAL_SAPCE[group].endCol >= targetCol\n            )\n        ) {\n            if (group === ROLE.BLACK) {\n                for (let _row = targetRow; _row <= 9; _row ++) {\n                    if (points[_row][targetCol]) {\n                        isPass = points[_row][targetCol].role !== RED_ROLE.MARSHAL;\n                        break;\n                    }\n                }\n            } else {\n                for (let _row = targetRow; _row >= 0; _row --) {\n                    if (points[_row][targetCol]) {\n                        isPass = points[_row][targetCol].role !== BLACK_ROLE.MARSHAL;\n                        break;\n                    }\n                }\n            }\n        }\n        if (isPass && isSameGroup) {\n            return false;\n        }\n        return isPass;\n    }\n\n    return false;\n};\n// 炮、砲\nconst isViolateGunRule = (chess, targetPoint, points) => {\n    const {\n        targetRow, targetCol,\n        fromRow, fromCol,\n        rowChanges, colChanges,\n        isSameGroup\n    } = parsePosition(chess, targetPoint, points);\n    let _num = 0;\n\n    if (rowChanges === 0 || colChanges === 0) {\n        // 是否存在炮架\n        if (colChanges === 0) {\n            const max = Math.max(fromRow, targetRow);\n            const min = Math.min(fromRow, targetRow);\n            for (let _row = min + 1; _row < max; _row ++) {\n                if (points[_row][fromCol]) {\n                    _num ++;\n                }\n            }\n        } else {\n            const max = Math.max(fromCol, targetCol);\n            const min = Math.min(fromCol, targetCol);\n            for (let _col = min + 1; _col < max; _col ++) {\n                if (points[fromRow][_col]) {\n                    _num ++;\n                }   \n            }\n        }\n        // 隔子打子\n        if (_num === 1 && points[targetRow][targetCol] && !isSameGroup) {\n            return true;\n        }\n        if (_num === 0 && !points[targetRow][targetCol]) {\n            return true;\n        }\n    }\n\n    return false;\n};","/**\n * 棋盘落子点\n*/\nimport React, { useCallback } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { connect } from 'react-redux';\nimport { ItemTypes } from '../utils/constants';\nimport { canChessDrop } from '../utils/Game.js'\nimport '../styles/pointor.less';\n\n// 落子点\nconst Pointor = connect((state) => ({\n    points: state.pointors\n}))(({ className, row, col, move, points }) => {\n    const [{ _ }, drop] = useDrop(\n        () => ({\n            accept: ItemTypes.CARD,\n            canDrop: (moveChess) => {\n                return canChessDrop(moveChess, { row, col }, points);\n            },\n            // drop事件发生的时候，重新渲染棋盘，并且执行一堆操作。\n            drop: (moveChess) => {\n                const { group, role, fromRow, fromCol } = moveChess || {};\n                move({ group, role }, { row: fromRow, col: fromCol });\n            },\n            collect: (monitor) => ({\n                isOver: monitor.isOver(),\n                canDrop: monitor.canDrop()\n            })\n        }),\n        [points],\n    );\n\n    if (!(row && col)) { return null; }\n\n    return (\n        <div\n            ref={drop}\n            className={className}\n            row={row}\n            col={col}\n            id={`${row}_${col}`} />\n    );\n});\n\nexport { Pointor };\nexport default Pointor;","/**\n * 游戏全局数据管理\n*/\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\nimport { InitCheckBoardPoints } from './utils/constants';\nimport game from './utils/Game.js'\n\n// 所有棋子信息\nconst pointors = createSlice({\n    name: 'pointors',\n    initialState: [],\n    reducers: {\n        // 落子后使用该函数\n        updatePointors: (points, { payload }) => {\n            const { chess, targetRow, targetCol } = payload || {};\n            const { group, role, fromRow, fromCol } = chess || {};\n            if (Number(targetRow) === Number(fromRow) && Number(targetCol) === Number(fromCol)) { return points; }\n            if (targetRow && targetCol) {\n                const _targetRow = targetRow - 1;\n                const _targetCol = targetCol - 1;\n                const _fromRow = fromRow - 1;\n                const _fromCol = fromCol - 1;\n                if (_targetRow <= 9 && _targetCol <= 8) {\n                    // 移动选中棋子\n                    points[_targetRow][_targetCol] = { role, group };\n                    // 删除已有之前棋子。\n                    points[_fromRow][_fromCol] = '';\n                }\n            }\n            // 进入下一轮\n            game.roundChange(points);\n            return points;\n        },\n        resetPointors: () => {\n            return InitCheckBoardPoints;\n        },\n    }\n});\n\nexport const Actions = {\n    ...pointors.actions,\n};\n\nexport default configureStore({\n    reducer: {\n        pointors: pointors.reducer,\n    },\n});","/**\n * 棋盘样式布局\n * 包括楚河汉界、炮的落子点、交错线等\n*/\nimport React, { useCallback, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Pointor } from './Pointor.jsx';\nimport { Actions } from '../store.js'\nimport game from '../utils/Game'\nimport '../styles/checkerboard.less';\n\n// 棋盘关键纹理位置(行_列)\nconst slant = ['1_4', '2_5', '8_4', '9_5'];\nconst slantBack = ['1_5', '2_4', '8_5', '9_4'];\nconst anchorRb = ['2_1', '2_7', '7_1', '7_7'];\nconst anchorRt = ['3_1', '3_7', '8_1', '8_7'];\nconst anchorLt = ['3_2', '3_8', '8_2', '8_8'];\nconst anchorLb = ['2_2', '2_8', '7_2', '7_8'];\n\n\n// Step1 棋盘渲染\n// 1、 改造棋盘，在对应节点上留下钩子，方便后续棋子渲染定位\n// 2、 画出楚河汉界\n// 3、 在页面上画一个棋子\n// 4、 棋盘不重复刷新，渲染后，留出钩子，每次移动棋子，都通过renderPortal的方式去渲染棋子们的新位置\n// Step2 棋子整体渲染\n// Step3 棋子移动和规则\n// 1、 棋子可以拖动，可以落下\n// 2、 挪动棋子动效\n// 3、 落子就干掉所在地的棋子\n// 4、 给棋子-兵 的移动添加规则\n// 5、 给棋子-炮 的移动添加规则\n// 6、 给棋子-车 的移动添加规则\n// 6、 给棋子-马 的移动添加规则\n// 6、 给棋子-相 的移动添加规则\n// 6、 给棋子-士 的移动添加规则\n// 6、 给棋子-将 的移动添加规则\n// Step4 整局相关\n// Step5 是否可以落子提示\n// Step6 Ts化改造\nconst Checkerboard = connect((state) => ({\n    points: state.pointors\n}), {\n    move: Actions.updatePointors,\n    init: Actions.resetPointors,\n})(({ move, points, init }) => {\n    /**\n     * 渲染格子\n     * @param {Number} row 多少行\n     * @param {Number} col 多少列\n     * @param {Boolean} isDivider 是否为楚河汉界那行\n     * @returns xml\n     */\n    const _renderGrid = (row, col, isDivider = false) => {\n        const id = `${row}_${col}`;\n        // slant 和 point 都是纹理，命中条件((行+列))，即渲染\n        const baseCls = row <= 5 ? 'pointer-black' : 'pointer-red';\n        const isLast = col === 8;\n        let extCls = '';\n        let gridCls = '';\n        if (slant.includes(id)) { extCls += ' slant'; }\n        if (slantBack.includes(id)) { extCls += ' slant-back'; }\n        if (anchorRb.includes(id)) { extCls += ' anchor-rb'; }\n        if (anchorRt.includes(id)) { extCls += ' anchor-rt'; }\n        if (anchorLt.includes(id)) { extCls += ' anchor-lt'; }\n        if (anchorLb.includes(id)) { extCls += ' anchor-lb'; }\n        if (isDivider) { extCls += ' hide-border'; }\n        const _move = useCallback((targetRow, targetCol) => {\n            return ({ group, role }, { row: fromRow, col: fromCol }) => {\n                game.judgeFinish(points, { targetRow: targetRow - 1, targetCol: targetCol - 1 });\n                move({\n                    chess: { group, role, fromRow, fromCol },\n                    targetRow,\n                    targetCol,\n                });\n            };\n        }, [col, row, points]);\n\n        if (row === 5) {\n            return (\n                <div key={id} className={`grid ${extCls}`}>\n                    {/* 黑棋边界 */}\n                    <Pointor move={_move(row, col)} className={`${baseCls} pointer-bottom`} row={row} col={col} />\n                    {\n                        isLast\n                            ? <Pointor move={_move(row, col + 1)} className={`${baseCls} pointer-bottom last`} row={row} col={col + 1} />\n                            : null\n                    }\n                    {/* 红棋边界 */}\n                    <Pointor move={_move(row + 1, col)} className=\"pointer-red pointer-top\" row={row + 1} col={col} />\n                    {\n                        isLast\n                            ? <Pointor move={_move(row + 1, col + 1)} className=\"pointer-red pointer-top last\" row={row + 1} col={col + 1} />\n                            : null\n                    }\n                </div>\n            );\n        }\n\n        const _row = row > 5 ? row + 1 : row;\n        return (\n            <div key={id} className={`grid ${extCls}`}>\n                <Pointor move={_move(_row, col)} className={`${baseCls}${gridCls}`} row={_row} col={col} />\n                {\n                    isLast\n                        ? <Pointor move={_move(_row, col + 1)} className={`${baseCls} last`} row={_row} col={col + 1} />\n                        : null\n                }\n            </div>\n        );\n    }\n\n    /**\n     * 按照行进行渲染\n     * @param {Number} row 多少行\n     * @returns xml\n     */\n    const _renderLine = (row) => {\n        if (row === 5) {\n            return (\n                <div className=\"divider\" key={row}>\n                    { _renderBanner() }\n                    { Array(8).fill('').map((_, _col) => _renderGrid(row, _col + 1, true)) }\n                </div>\n            );\n        }\n        return <>\n            { Array(8).fill('').map((_, _col) => _renderGrid(row, _col + 1)) }\n        </>;\n    }\n\n    // 楚河汉界\n    const _renderBanner = () => {\n        return (\n            <>\n                <div className='banner-left'><p>楚 河</p></div>\n                <div className='banner-right'><p>汉 界</p></div>\n            </>\n        );\n    }\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    // 布局是八横八纵，横向多一个楚河汉界\n    return (\n        <div id=\"Checkerboard\">\n            { Array(9).fill('').map((_, _row) => _renderLine(_row + 1)) }\n        </div>\n    );\n});\n\nexport { Checkerboard };\nexport default Checkerboard;","/**\n * 双方棋子\n*/\nimport React, { useMemo } from 'react';\nimport { useDrag, DragPreviewImage } from \"react-dnd\";\nimport { ItemTypes } from '../utils/constants';\nimport '../styles/chessman.less';\n\nconst Chessman = (props) => {\n    const { group, role, position = '', style = {} } = props;\n    const [ fromRow, fromCol ] = position.split('_') || [];\n    const [{ isDragging }, drag, preview] = useDrag({\n        type: ItemTypes.CARD,\n        item: () => ({ role, group, fromRow, fromCol }),\n        collect: (monitor) => {\n            return {\n                isDragging: monitor.isDragging()\n            };\n        }\n    });\n    const previewImg = useMemo(() => {\n        let imgUrl = '';\n        try {\n            imgUrl = require(`../snapshots/${role}_${group}.png`);\n        } catch (e) {\n            imgUrl = ''\n        }\n\n        return imgUrl;\n    }, [group, role]);\n\n    if (!role) { return null; }\n\n    return (\n        <>\n            <DragPreviewImage connect={preview} src={previewImg} />\n            <div\n                ref={drag}\n                className=\"chessman\"\n                style={{ ...style, opacity: isDragging ? 0.5 : 1 }}\n                group={group}>\n                {role}\n            </div>\n        </>\n    );\n}\n\nexport { Chessman };\nexport default Chessman;","/**\n * 将所有棋子一一挂接到落子点\n * 直接盖在棋盘上，棋盘自身几乎不会重新渲染\n*/\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createPortal } from 'react-dom';\nimport Chessman from './Chessman.jsx';\n\nconst CheckerPonits = connect((state) => ({\n    points: state.pointors\n}))(class CheckerPonits extends React.Component {\n    // 渲染全盘棋子\n    _renderPoints = () => {\n        if (!Array.isArray(this.props.points)) { return null; }\n        return this.props.points.map((row, _rowId) => {\n            const rowId = _rowId + 1;\n            return row.map((point, _colId) => {\n                const colId = _colId + 1;\n                return this._renderPoint(`${rowId}_${colId}`, point);\n            })\n        });\n    }\n\n    // 渲染单个棋子\n    _renderPoint = (position, point) => {\n        if (!(position && point)) { return null; }\n        const node = document.getElementById(position);\n        const { role, group } = point || {};\n        if (!(role && group && node)) { return null; }\n        return createPortal((\n            <Chessman key={position} position={position} group={group} role={role} />\n        ), node);\n    }\n\n    render() {\n        if (!this.props.points) { return null; }\n\n        return (\n            <>\n            {this._renderPoints()}\n            </>\n        );\n    }\n});\n\nexport { CheckerPonits };\nexport default CheckerPonits;","/**\n * 棋盘落子点\n*/\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { connect } from 'react-redux';\nimport moment  from 'moment';\nimport { ROLE } from '../utils/constants';\nimport game from '../utils/Game';\nimport '../styles/dashboard.less';\n\n// 落子点\nconst DashBoard = connect((state) => ({\n}))(class DashBoard extends React.Component {\n    state = {\n        gameTimer: game.gameTimer || 0,\n        groupInAction: game.groupInAction,\n    };\n\n    _timeFormat(time) {\n        if (!time) { return ''; }\n        return moment(time).utcOffset(0).format('HH:mm:ss');\n    }\n\n    _applyTie() {\n        game.applyTie();\n    }\n\n    componentDidMount() {\n        game.addTimerCb(() => {\n            this.setState({ gameTimer: game.gameTimer });\n        });\n        game.addRoundChangeCb(() => {\n            this.setState({ groupInAction: game.groupInAction });\n        });\n    }\n\n    render () {\n        const { gameTimer, groupInAction } = this.state || {};\n        const byTurn = `轮到: ${groupInAction === ROLE.BLACK ? '黑方' : '红方'}落子`;\n\n        return (\n            createPortal((\n                <div id='Dashboard'>\n                    <p className=\"dashboard_text\">{`用时: ${this._timeFormat(gameTimer) || '00:00:00'}`}</p>\n                    <p className=\"dashboard_text\">{byTurn}</p>\n                    <div className=\"dashboard_btns\">\n                        <p className=\"dashboard_btn\" onClick={this._applyTie}>求和</p>\n                        <p className=\"dashboard_btn\">导出棋谱</p>\n                    </div>\n                </div>\n            ), document.body)\n       );\n    }\n});\n\nexport { DashBoard };\nexport default DashBoard;","import React, { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Modal, Button } from 'antd';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Checkerboard from './components/Checkerboard.jsx';\nimport CheckerPonits from './components/CheckerPonits.jsx';\nimport DashBoard from './components/DashBoard.jsx';\nimport store from './store.js';\nimport game from './utils/Game';\nimport { WINNER } from './utils/constants';\n\n// (wsw)TODO: 整体转换为TS\n// (wsw)TODO: 添加单元测试\nclass App extends React.Component {\n    state = {\n        isModalOpen: false\n    };\n\n    /** 私有方法 */\n    _renderModal() {\n        const { isModalOpen } = this.state;\n        const result = game.result;\n        let title = '';\n\n        if (result === WINNER.TIE) {\n            title = '平局！';\n        } else if (result === WINNER.RED) {\n            title = '恭喜红方玩家！';\n        } else {\n            title = '恭喜黑方玩家！';\n        }\n\n        return createPortal(\n            <Modal\n                title={title}\n                open={isModalOpen}\n                footer={[\n                    <Button\n                        key=\"ok\"\n                        type='primary'\n                        onClick={() => this.setState({ isModalOpen: !isModalOpen })}>确定</Button>]}>\n                <p>二国争强各用兵，摆成队伍定输赢。</p>\n                <p>马行曲路当知道，将守深宫戒远征。</p>\n                <p>乘险出车收败卒，隔河飞炮下重城。</p>\n                <p>等闲识得军情事，一着功成见太平。</p>\n            </Modal>,\n            document.body\n        );\n    }\n\n    /** 生命周期 */\n    componentDidMount() {\n        game.addGameFinishCb(() => {\n            this.setState({ isModalOpen: true })\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Provider store={store}>\n                    <DndProvider backend={HTML5Backend}>\n                        <Checkerboard />\n                        <CheckerPonits />\n                        <DashBoard />\n                        {this._renderModal()}\n                    </DndProvider>\n                </Provider>\n            </>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('CheckerboardWrapper'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}